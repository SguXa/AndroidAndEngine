if(pSceneTouchEvent.getAction() == TouchEvent.ACTION_MOVE){

screen_touched_x = pSceneTouchEvent.getX();
screen_touched_y = pSceneTouchEvent.getY();

float dx = screen_touched_x - (hero.getX() +( hero.getWidth()/2+ 20));
float dy = screen_touched_y - hero.getY();
float rotationAngle = (float) Math.atan2(dy, dx);
hero.setRotationCenter(hero.getWidth()/2 +20, hero.getHeight()); 
hero.setRotation(MathUtils.radToDeg(rotationAngle));
}

hero.setRotation( MathUtils.radToDeg( rotationAngle ) + 90.0f );

telo.attachChild( nogi );

//////////////////

int screen_touched_x, screen_touched_y - координаты твоего прикосновения
int hero_position_x, hero_position_y - координаты героя

пусть изначально герой смотрит вверх, и будет переменная, которая следит за поворотом спрайта героя
private float next_hero_rotation = 0; // 0..360 - куда должен смотреть герой
private float current_hero_rotation = 0; // Эту переменную мы будем менять, для плавности поворота
private float hero_speed_rotation = 0.5f; // Скорость поворота

... какая-нибудь функция анимации, например OnUpdate

final float dx,dy,alpha;

dx = screen_touched_x - hero_position_x;
dy = screen_touched_y - hero_position_y;

if( dx > 0)
{
// правый верхний сектор
if( dy < 0)
{
alpha = 90 * ( dx / screen_touched_x );
}
// правый нижний
else
{
alpha = 90 + 90 * ( 1 - dx / screen_touched_x );
}

}
else
{
// левый верхний сектор
if( dy < 0)
{
alpha = 90 + 90 + 90 + 90 * ( dx / screen_touched_x );
}
// левый нижний
else
{
alpha = 90 + 90 + 90 * ( 1 - dx / screen_touched_x );
}

}

next_hero_rotation = alpha;

// Изменяем переменную вращения
if( current_hero_rotation != next_hero_rotation )
{
if( current_hero_rotation > next_hero_rotation )
{
current_hero_rotation -= hero_speed_rotation;
// Если достаточно повернули, то убеждаемся что переменные идентичны
if( current_hero_rotation <= next_hero_rotation ) current_hero_rotation = hero_speed_rotation;
}
else
{
current_hero_rotation += hero_speed_rotation;
if( current_hero_rotation >= next_hero_rotation ) current_hero_rotation = hero_speed_rotation;
}
}

__hero__.setRotation( current_hero_rotation );